{"ast":null,"code":"import _toConsumableArray from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/src/containers/home.container.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Home from \"../components/home\";\nimport * as home_actions from \"../actions/home.action\";\nimport { pieces } from \"../constants/action.types\";\nimport { isWin } from \"../algorithm/main\";\nvar HomeContainer = /*#__PURE__*/function (_Component) {\n  _inherits(HomeContainer, _Component);\n  function HomeContainer(props) {\n    var _this;\n    _classCallCheck(this, HomeContainer);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HomeContainer).call(this, props));\n    _this.state = {\n      count: 0,\n      is_win: -1,\n      pieces_win: null\n    };\n    return _this;\n  }\n  _createClass(HomeContainer, [{\n    key: \"tick\",\n    value: function tick(row, col) {\n      var _this$props = this.props,\n        actions = _this$props.actions,\n        array_board = _this$props.array_board,\n        piece_current = _this$props.piece_current,\n        number_cell = _this$props.number_cell;\n      if (this.state.is_win == 1) {\n        return;\n      }\n      // count number of tick \n      var count_tmp = this.state.count + 1;\n      this.setState({\n        count: count_tmp\n      });\n\n      // update board \n      var array_new = _toConsumableArray(array_board);\n      array_new[row][col] = piece_current;\n      actions.tick(array_new);\n\n      // check win \n      var pieces_win = isWin(array_new, row, col, piece_current);\n      if (pieces_win.length > 0) {\n        this.setState({\n          is_win: 1,\n          pieces_win: pieces_win\n        });\n      } else if (count_tmp == number_cell * number_cell) {\n        this.setState({\n          is_win: 0\n        });\n      } else {\n        // switch player\n        actions.switch_piece(piece_current == pieces.X ? pieces.O : pieces.X);\n      }\n    }\n  }, {\n    key: \"reset_map\",\n    value: function reset_map() {\n      var _this2 = this;\n      this.props.actions.init_array(Array(this.props.number_cell).fill(null).map(function () {\n        return Array(_this2.props.number_cell).fill(null);\n      }));\n      this.props.actions.switch_piece(pieces.X);\n      this.setState({\n        count: 0,\n        is_win: -1,\n        pieces_win: null\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var _this$props2 = this.props,\n        actions = _this$props2.actions,\n        array_board = _this$props2.array_board,\n        piece_current = _this$props2.piece_current;\n      var _this$state = this.state,\n        is_win = _this$state.is_win,\n        pieces_win = _this$state.pieces_win;\n      return /*#__PURE__*/React.createElement(Home, {\n        setNumberCell: function setNumberCell(numberCell) {\n          var number_cell = parseInt(numberCell);\n          actions.set_number_cell(number_cell);\n          actions.init_array(Array(number_cell).fill(null).map(function () {\n            return Array(number_cell).fill(null);\n          }));\n        },\n        array_board: array_board,\n        tick: function tick(row, col) {\n          return _this3.tick(row, col);\n        },\n        piece_current: piece_current,\n        is_win: is_win,\n        pieces_win: pieces_win,\n        reset_map: function reset_map() {\n          return _this3.reset_map();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n  return HomeContainer;\n}(Component);\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    number_cell: state.main.number_cell,\n    array_board: state.main.array_board,\n    piece_current: state.main.piece_current\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(home_actions, dispatch)\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeContainer);","map":{"version":3,"names":["React","Component","connect","bindActionCreators","Home","home_actions","pieces","isWin","HomeContainer","_Component","_inherits","props","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","state","count","is_win","pieces_win","_createClass","key","value","tick","row","col","_this$props","actions","array_board","piece_current","number_cell","count_tmp","setState","array_new","_toConsumableArray","length","switch_piece","X","O","reset_map","_this2","init_array","Array","fill","map","render","_this3","_this$props2","_this$state","createElement","setNumberCell","numberCell","parseInt","set_number_cell","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mapStateToProps","main","mapDispatchToProps","dispatch"],"sources":["/Users/thunguyen/Downloads/tic-tac-toe-valentine/src/containers/home.container.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Home from \"../components/home\";\nimport * as home_actions from \"../actions/home.action\";\nimport { pieces } from \"../constants/action.types\";\nimport { isWin } from \"../algorithm/main\";\n\nclass HomeContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      is_win: -1,\n      pieces_win: null\n    };\n  }\n\n  tick(row, col) {\n    const { actions, array_board, piece_current, number_cell } = this.props;\n    if (this.state.is_win == 1) {\n      return;\n    }\n    // count number of tick \n    let count_tmp = this.state.count + 1;\n    this.setState({ count: count_tmp });\n\n    // update board \n    let array_new = [...array_board];\n    array_new[row][col] = piece_current;\n    actions.tick(array_new);\n\n    // check win \n    const pieces_win = isWin(array_new, row, col, piece_current);\n    if (pieces_win.length > 0) {\n      this.setState({ is_win: 1, pieces_win: pieces_win });\n    } else if (count_tmp ==  number_cell * number_cell) {\n      this.setState({ is_win: 0 });\n    } else {\n      // switch player\n      actions.switch_piece(piece_current == pieces.X ? pieces.O : pieces.X);\n    }\n  }\n\n  reset_map() {\n    this.props.actions.init_array(\n      Array(this.props.number_cell)\n        .fill(null)\n        .map(() => Array(this.props.number_cell).fill(null))\n    );\n    this.props.actions.switch_piece(pieces.X);\n    this.setState({\n      count: 0,\n      is_win: -1,\n      pieces_win: null\n    });\n  }\n\n  render() {\n    const { actions, array_board, piece_current } = this.props;\n    const { is_win, pieces_win } = this.state;\n    return (\n      <Home\n        setNumberCell={numberCell => {\n          const number_cell = parseInt(numberCell);\n          actions.set_number_cell(number_cell);\n          actions.init_array(\n            Array(number_cell)\n              .fill(null)\n              .map(() => Array(number_cell).fill(null))\n          );\n        }}\n        array_board={array_board}\n        tick={(row, col) => this.tick(row, col)}\n        piece_current={piece_current}\n        is_win={is_win}\n        pieces_win={pieces_win}\n        reset_map={() => this.reset_map()}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  number_cell: state.main.number_cell,\n  array_board: state.main.array_board,\n  piece_current: state.main.piece_current\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actions: bindActionCreators(home_actions, dispatch)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HomeContainer);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}