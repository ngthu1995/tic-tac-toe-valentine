{"ast":null,"code":"import _toConsumableArray from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/src/containers/home.container.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Home from \"../components/home\";\nimport * as home_actions from \"../actions/home.action\";\nimport { pieces } from \"../constants/action.types\";\nimport { isWin } from \"../algorithm/main\";\nvar HomeContainer = function HomeContainer(props) {\n  var actions = props.actions,\n    array_board = props.array_board,\n    piece_current = props.piece_current,\n    number_cell = props.number_cell;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var _useState3 = useState(-1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isWin = _useState4[0],\n    setWin = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    piecesWin = _useState6[0],\n    setPiecesWin = _useState6[1];\n  var _tick = function tick(row, col) {\n    var _this$props = _this.props,\n      actions = _this$props.actions,\n      array_board = _this$props.array_board,\n      piece_current = _this$props.piece_current,\n      number_cell = _this$props.number_cell;\n    if (is_win === 1) {\n      return;\n    }\n    // count number of tick \n    var count_tmp = count + 1;\n    setCount(count_tmp);\n\n    // update board \n    var newArray = _toConsumableArray(array_board);\n    newArray[row][col] = piece_current;\n    actions.tick(newArray);\n\n    // check win \n    var updatedPiecesWin = isWin(newArray, row, col, piece_current);\n    if (updatedPiecesWin.length > 0) {\n      setWin(1);\n      setPiecesWin(updatedPiecesWin);\n    } else if (count_tmp == number_cell * number_cell) {\n      setWin(0);\n    } else {\n      // switch player\n      actions.switch_piece(piece_current == pieces.X ? pieces.O : pieces.X);\n    }\n  };\n  var _reset_map = function reset_map() {\n    actions.init_array(Array(number_cell).fill(null).map(function () {\n      return Array(number_cell).fill(null);\n    }));\n    actions.switch_piece(pieces.X);\n    setCount(0);\n    setWin(-1);\n    setPiecesWin(null);\n  };\n  return /*#__PURE__*/React.createElement(Home, {\n    setNumberCell: function setNumberCell(numberCell) {\n      var number_cell = parseInt(numberCell);\n      actions.set_number_cell(number_cell);\n      actions.init_array(Array(number_cell).fill(null).map(function () {\n        return Array(number_cell).fill(null);\n      }));\n    },\n    array_board: array_board,\n    tick: function tick(row, col) {\n      return _tick(row, col);\n    },\n    piece_current: piece_current,\n    is_win: isWin,\n    pieces_win: piecesWin,\n    reset_map: function reset_map() {\n      return _reset_map();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  });\n};\nexport default HomeContainer;","map":{"version":3,"names":["React","Component","connect","bindActionCreators","Home","home_actions","pieces","isWin","HomeContainer","props","actions","array_board","piece_current","number_cell","_useState","useState","_useState2","_slicedToArray","count","setCount","_useState3","_useState4","setWin","_useState5","_useState6","piecesWin","setPiecesWin","tick","row","col","_this$props","_this","is_win","count_tmp","newArray","_toConsumableArray","updatedPiecesWin","length","switch_piece","X","O","reset_map","init_array","Array","fill","map","createElement","setNumberCell","numberCell","parseInt","set_number_cell","pieces_win","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/thunguyen/Downloads/tic-tac-toe-valentine/src/containers/home.container.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Home from \"../components/home\";\nimport * as home_actions from \"../actions/home.action\";\nimport { pieces } from \"../constants/action.types\";\nimport { isWin } from \"../algorithm/main\";\n\nconst HomeContainer = (props) => {\n  const { actions, array_board, piece_current, number_cell } = props\n\n  const [count, setCount] = useState(0)\n  const [isWin, setWin] = useState(-1)\n  const [piecesWin, setPiecesWin] = useState(null)\n\n  const tick= (row, col) => {\n    const { actions, array_board, piece_current, number_cell } = this.props;\n    if (is_win === 1) {\n      return;\n    }\n    // count number of tick \n    let count_tmp = count + 1;\n    setCount(count_tmp );\n\n    // update board \n    let newArray = [...array_board];\n    newArray[row][col] = piece_current;\n    actions.tick(newArray);\n\n    // check win \n    const updatedPiecesWin = isWin(newArray, row, col, piece_current);\n    if (updatedPiecesWin.length > 0) {\n      setWin(1)\n      setPiecesWin(updatedPiecesWin)\n    } else if (count_tmp ==  number_cell * number_cell) {\n      setWin(0)\n    } else {\n      // switch player\n      actions.switch_piece(piece_current == pieces.X ? pieces.O : pieces.X);\n    }\n  }\n\n  const reset_map = () => {\n    actions.init_array(\n      Array(number_cell)\n        .fill(null)\n        .map(() => Array(number_cell).fill(null))\n    );\n    actions.switch_piece(pieces.X);\n    setCount(0)\n    setWin(-1)\n    setPiecesWin(null)\n  }\n\n  return (\n    <Home\n      setNumberCell={numberCell => {\n        const number_cell = parseInt(numberCell);\n        actions.set_number_cell(number_cell);\n        actions.init_array(\n          Array(number_cell)\n            .fill(null)\n            .map(() => Array(number_cell).fill(null))\n        );\n      }}\n      array_board={array_board}\n      tick={(row, col) => tick(row, col)}\n      piece_current={piece_current}\n      is_win={isWin}\n      pieces_win={piecesWin}\n      reset_map={() => reset_map()}\n    />\n  );\n}\n\nexport default HomeContainer"],"mappings":"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"},"metadata":{},"sourceType":"module"}