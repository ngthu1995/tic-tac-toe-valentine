{"ast":null,"code":"// Func isWin will return array have length 5 when win and return array empty\nexport var isWinning = function isWinning(board, row, col, turn) {\n  console.log({\n    board: board,\n    row: row,\n    col: col,\n    turn: turn\n  });\n  var piece_win = [];\n  // check col win\n  var index = col - 1;\n  while (index >= 0 && board[row][index] == turn) {\n    console.log('herè', {\n      index: index,\n      turn: turn\n    });\n    piece_win.push([row, index]);\n    index--;\n  }\n  index = col + 1;\n  while (index <= board.length - 1 && board[row][index] == turn) {\n    piece_win.push([row, index]);\n    index++;\n  }\n  if (piece_win.length >= 4) {\n    piece_win.push([row, col]);\n    return piece_win;\n  }\n\n  // check row\n  index = row - 1;\n  piece_win = [];\n  while (index >= 0 && board[index][col] == turn) {\n    piece_win.push([index, col]);\n    index--;\n  }\n  index = row + 1;\n  while (index >= 0 && index < board.length - 1 && board[index][col] == turn) {\n    piece_win.push([index, col]);\n    index++;\n  }\n  if (piece_win.length >= 4) {\n    piece_win.push([row, col]);\n    return piece_win;\n  }\n\n  // check diagonal left\n  var row_index = row - 1;\n  var col_index = col - 1;\n  piece_win = [];\n  while (row_index >= 0 && col_index >= 0 && board[row_index][col_index] == turn) {\n    piece_win.push([row_index, col_index]);\n    row_index--;\n    col_index--;\n  }\n  row_index = row + 1;\n  col_index = col + 1;\n  while (row_index >= 0 && col_index >= 0 && row_index <= board.length - 1 && col_index <= board.length - 1 && board[row_index][col_index] == turn) {\n    piece_win.push([row_index, col_index]);\n    row_index++;\n    col_index++;\n  }\n  if (piece_win.length >= 4) {\n    piece_win.push([row, col]);\n    return piece_win;\n  }\n  // check diagonal left\n  row_index = row - 1;\n  col_index = col + 1;\n  piece_win = [];\n  while (col_index >= 0 && row_index >= 0 && col_index <= board.length - 1 && board[row_index][col_index] == turn) {\n    piece_win.push([row_index, col_index]);\n    row_index--;\n    col_index++;\n  }\n  row_index = row + 1;\n  col_index = col - 1;\n  while (row_index >= 0 && row_index <= board.length - 1 && col_index >= 0 && board[row_index][col_index] == turn) {\n    piece_win.push([row_index, col_index]);\n    row_index++;\n    col_index--;\n  }\n  if (piece_win.length >= 4) {\n    piece_win.push([row, col]);\n    return piece_win;\n  }\n  return [];\n};","map":{"version":3,"names":["isWinning","board","row","col","turn","console","log","piece_win","index","push","length","row_index","col_index"],"sources":["/Users/thunguyen/Downloads/tic-tac-toe-valentine/src/algorithm/main.js"],"sourcesContent":["// Func isWin will return array have length 5 when win and return array empty\nexport const isWinning = (board, row, col, turn) => {\n  console.log({ board, row, col, turn });\n  let piece_win = [];\n  // check col win\n  let index = col - 1;\n\n  while (index >= 0 && board[row][index] == turn) {\n    console.log('herè', {index, turn})\n    piece_win.push([row, index]);\n    index--;\n  }\n\n  index = col + 1;\n  while (index <= board.length - 1 && board[row][index] == turn) {\n    piece_win.push([row, index]);\n    index++;\n  }\n  if (piece_win.length >= 4) {\n    piece_win.push([row, col]);\n    return piece_win;\n  }\n\n  // check row\n  index = row - 1;\n  piece_win = [];\n  while (index >= 0 && board[index][col] == turn) {\n    piece_win.push([index, col]);\n    index--;\n  }\n\n  index = row + 1;\n  while (index >= 0 && index < board.length - 1 && board[index][col] == turn) {\n    piece_win.push([index, col]);\n    index++;\n  }\n  if (piece_win.length >= 4) {\n    piece_win.push([row, col]);\n    return piece_win;\n  }\n\n  // check diagonal left\n  let row_index = row - 1;\n  let col_index = col - 1;\n  piece_win = [];\n\n  while (\n    row_index >= 0 &&\n    col_index >= 0 &&\n    board[row_index][col_index] == turn\n  ) {\n    piece_win.push([row_index, col_index]);\n    row_index--;\n    col_index--;\n  }\n\n  row_index = row + 1;\n  col_index = col + 1;\n  while (\n    row_index >= 0 &&\n    col_index >= 0 &&\n    row_index <= board.length - 1 &&\n    col_index <= board.length - 1 &&\n    board[row_index][col_index] == turn\n  ) {\n    piece_win.push([row_index, col_index]);\n    row_index++;\n    col_index++;\n  }\n  if (piece_win.length >= 4) {\n    piece_win.push([row, col]);\n    return piece_win;\n  }\n  // check diagonal left\n  row_index = row - 1;\n  col_index = col + 1;\n  piece_win = [];\n  while (\n    col_index >= 0 &&\n    row_index >= 0 &&\n    col_index <= board.length - 1 &&\n    board[row_index][col_index] == turn\n  ) {\n    piece_win.push([row_index, col_index]);\n    row_index--;\n    col_index++;\n  }\n  row_index = row + 1;\n  col_index = col - 1;\n  while (\n    row_index >= 0 &&\n    row_index <= board.length - 1 &&\n    col_index >= 0 &&\n    board[row_index][col_index] == turn\n  ) {\n    piece_win.push([row_index, col_index]);\n    row_index++;\n    col_index--;\n  }\n  if (piece_win.length >= 4) {\n    piece_win.push([row, col]);\n    return piece_win;\n  }\n  return [];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}