{"ast":null,"code":"import _objectSpread from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from \"redux\";\nimport { types, pieces } from \"../constants/action.types\";\nvar inital_state = {\n  number_cell: null,\n  array_board: null,\n  piece_current: pieces.X\n};\nvar main = function main() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inital_state;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case types.SET_NUMBER_CELL:\n      {\n        return _objectSpread({}, state, {\n          number_cell: parseInt(action.number_cell)\n        });\n      }\n    case types.INIT_ARRAY:\n      {\n        return _objectSpread({}, state, {\n          array_board: action.array_board\n        });\n      }\n    case types.SWITCH_PIECE:\n      {\n        return _objectSpread({}, state, {\n          piece_current: action.data\n        });\n      }\n    case types.TICK:\n      {\n        return _objectSpread({}, state, {\n          array_board: action.array_new\n        });\n      }\n    default:\n      return state;\n  }\n};\nexport default combineReducers({\n  main: main\n});","map":{"version":3,"names":["combineReducers","types","pieces","inital_state","number_cell","array_board","piece_current","X","main","state","arguments","length","undefined","action","type","SET_NUMBER_CELL","_objectSpread","parseInt","INIT_ARRAY","SWITCH_PIECE","data","TICK","array_new"],"sources":["/Users/thunguyen/Downloads/tic-tac-toe-valentine/src/reducers/index.js"],"sourcesContent":["import { combineReducers } from \"redux\";\nimport { types, pieces } from \"../constants/action.types\";\n\nconst inital_state = {\n  number_cell: null,\n  array_board: null,\n  piece_current: pieces.X\n};\nconst main = (state = inital_state, action) => {\n  switch (action.type) {\n    case types.SET_NUMBER_CELL: {\n      return { ...state, number_cell: parseInt(action.number_cell) };\n    }\n    case types.INIT_ARRAY: {\n      return { ...state, array_board: action.array_board };\n    }\n    case types.SWITCH_PIECE: {\n      return { ...state, piece_current: action.data };\n    }\n    case types.TICK: {\n      return {...state, array_board: action.array_new}\n    }\n    default:\n      return state;\n  }\n};\nexport default combineReducers({ main });\n"],"mappings":";AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,MAAM,QAAQ,2BAA2B;AAEzD,IAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,IAAI;EACjBC,WAAW,EAAE,IAAI;EACjBC,aAAa,EAAEJ,MAAM,CAACK;AACxB,CAAC;AACD,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAqC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,YAAY;EAAA,IAAEU,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACxC,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKb,KAAK,CAACc,eAAe;MAAE;QAC1B,OAAAC,aAAA,KAAYP,KAAK;UAAEL,WAAW,EAAEa,QAAQ,CAACJ,MAAM,CAACT,WAAW;QAAC;MAC9D;IACA,KAAKH,KAAK,CAACiB,UAAU;MAAE;QACrB,OAAAF,aAAA,KAAYP,KAAK;UAAEJ,WAAW,EAAEQ,MAAM,CAACR;QAAW;MACpD;IACA,KAAKJ,KAAK,CAACkB,YAAY;MAAE;QACvB,OAAAH,aAAA,KAAYP,KAAK;UAAEH,aAAa,EAAEO,MAAM,CAACO;QAAI;MAC/C;IACA,KAAKnB,KAAK,CAACoB,IAAI;MAAE;QACf,OAAAL,aAAA,KAAWP,KAAK;UAAEJ,WAAW,EAAEQ,MAAM,CAACS;QAAS;MACjD;IACA;MACE,OAAOb,KAAK;EAChB;AACF,CAAC;AACD,eAAeT,eAAe,CAAC;EAAEQ,IAAI,EAAJA;AAAK,CAAC,CAAC"},"metadata":{},"sourceType":"module"}