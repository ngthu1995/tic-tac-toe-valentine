{"ast":null,"code":"import _toConsumableArray from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from \"react\";\nimport { pieces } from \"../constants/action.types\";\nimport { isWinning } from \"../algorithm/main\";\nvar usePlayers = function usePlayers() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    player1 = _useState2[0],\n    setPlayer1 = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    player2 = _useState4[0],\n    setPlayer2 = _useState4[1];\n  var handleNameChange = function handleNameChange(e) {\n    return function (type) {\n      console.log(\"ðŸš€ ~ handleNameChange ~ type:\", type);\n      if (type === 'player1') {\n        setPlayer1(e.target.value);\n      } else if (type === 'player2') {\n        setPlayer2(e.target.value);\n      }\n    };\n  };\n  return {\n    player1: player1,\n    player2: player2,\n    handleNameChange: handleNameChange\n  };\n};\nexport var useHomePage = function useHomePage() {\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    numberCell = _useState6[0],\n    setNumberCell = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    arrayBoard = _useState8[0],\n    setArrayBoard = _useState8[1];\n  var _useState9 = useState(pieces.X),\n    _useState10 = _slicedToArray(_useState9, 2),\n    currentPiece = _useState10[0],\n    setCurrentPiece = _useState10[1];\n  var _useState11 = useState({\n      open: false,\n      title: '',\n      content: ''\n    }),\n    _useState12 = _slicedToArray(_useState11, 2),\n    dialogState = _useState12[0],\n    setDialogState = _useState12[1];\n  var _usePlayers = usePlayers(),\n    player1 = _usePlayers.player1,\n    player2 = _usePlayers.player2,\n    handleNameChange = _usePlayers.handleNameChange;\n  var onSetNumberCell = function onSetNumberCell(numberCell) {\n    setNumberCell(parseInt(numberCell));\n  };\n  var onInitArray = function onInitArray(arrayBoard) {\n    setArrayBoard(arrayBoard);\n  };\n  var onTick = function onTick(array_new) {\n    setArrayBoard(array_new);\n  };\n  var onSwitchPiece = function onSwitchPiece(data) {\n    setCurrentPiece(data);\n  };\n  var _useState13 = useState(0),\n    _useState14 = _slicedToArray(_useState13, 2),\n    count = _useState14[0],\n    setCount = _useState14[1];\n  var _useState15 = useState(-1),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isWin = _useState16[0],\n    setWin = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    piecesWin = _useState18[0],\n    setPiecesWin = _useState18[1];\n  var handleDialog = function handleDialog(_ref) {\n    var open = _ref.open,\n      title = _ref.title,\n      content = _ref.content;\n    setDialogState({\n      open: open,\n      content: content,\n      title: title\n    });\n  };\n  var tick = function tick(row, col) {\n    if (isWin === 1) {\n      return;\n    }\n    var count_tmp = count + 1;\n    setCount(count_tmp);\n\n    // update board \n    var newArray = _toConsumableArray(arrayBoard);\n    newArray[row][col] = currentPiece;\n    onTick(newArray);\n\n    // check win \n    var updatedPiecesWin = isWinning(newArray, row, col, currentPiece);\n    if (updatedPiecesWin.length > 0) {\n      setWin(1);\n      setPiecesWin(updatedPiecesWin);\n    } else if (count_tmp === numberCell * numberCell) {\n      setWin(0);\n    } else {\n      // switch player\n      console.log(\"ðŸš€ ~ tick ~ currentPiece:\", currentPiece);\n      onSwitchPiece(currentPiece === pieces.X ? pieces.O : pieces.X);\n      var currentPlayer = currentPiece === pieces.X ? player1 : player2;\n      var title = \"\".concat(currentPlayer, \"'s turn\");\n      handleDialog({\n        open: true,\n        title: title,\n        content: 'test'\n      });\n      console.log(\"ðŸš€ ~ tick ~ title:\", title);\n    }\n  };\n  var resetMap = function resetMap() {\n    onInitArray(Array(numberCell).fill(null).map(function () {\n      return Array(numberCell).fill(null);\n    }));\n    onSwitchPiece(pieces.X);\n    setCount(0);\n    setWin(-1);\n    setPiecesWin(null);\n  };\n  return {\n    numberCell: numberCell,\n    currentPiece: currentPiece,\n    arrayBoard: arrayBoard,\n    onSetNumberCell: onSetNumberCell,\n    onInitArray: onInitArray,\n    onTick: onTick,\n    onSwitchPiece: onSwitchPiece,\n    tick: tick,\n    isWin: isWin,\n    piecesWin: piecesWin,\n    resetMap: resetMap,\n    handleDialog: handleDialog,\n    dialogState: dialogState,\n    player1: player1,\n    player2: player2,\n    handleNameChange: handleNameChange\n  };\n};","map":{"version":3,"names":["useState","pieces","isWinning","usePlayers","_useState","_useState2","_slicedToArray","player1","setPlayer1","_useState3","_useState4","player2","setPlayer2","handleNameChange","e","type","console","log","target","value","useHomePage","_useState5","_useState6","numberCell","setNumberCell","_useState7","_useState8","arrayBoard","setArrayBoard","_useState9","X","_useState10","currentPiece","setCurrentPiece","_useState11","open","title","content","_useState12","dialogState","setDialogState","_usePlayers","onSetNumberCell","parseInt","onInitArray","onTick","array_new","onSwitchPiece","data","_useState13","_useState14","count","setCount","_useState15","_useState16","isWin","setWin","_useState17","_useState18","piecesWin","setPiecesWin","handleDialog","_ref","tick","row","col","count_tmp","newArray","_toConsumableArray","updatedPiecesWin","length","O","currentPlayer","concat","resetMap","Array","fill","map"],"sources":["/Users/thunguyen/Downloads/tic-tac-toe-valentine/src/hooks/index.js"],"sourcesContent":["import { useState } from \"react\";\nimport { pieces } from \"../constants/action.types\";\nimport { isWinning } from \"../algorithm/main\";\n\nconst usePlayers = () => {\n  const [player1, setPlayer1] = useState('')\n  const [player2, setPlayer2] = useState('')\n  const handleNameChange = (e) => type => {\n    console.log(\"ðŸš€ ~ handleNameChange ~ type:\", type)\n    if (type === 'player1'){\n      setPlayer1(e.target.value)\n    } else if (type === 'player2'){\n      setPlayer2(e.target.value)\n    }\n  }\n  return {\n    player1,\n    player2,\n    handleNameChange\n  }\n}\n\nexport const useHomePage = () => {\n  const [numberCell, setNumberCell] = useState(null)\n  const [arrayBoard, setArrayBoard] = useState(null)\n  const [currentPiece, setCurrentPiece] = useState(pieces.X)\n  const [dialogState, setDialogState] = useState({\n    open: false,\n    title: '',\n    content: ''\n  })\n\n  const {\n    player1,\n    player2,\n    handleNameChange\n  } = usePlayers()\n  const onSetNumberCell = numberCell => {\n    setNumberCell(parseInt(numberCell))\n  }\n\nconst onInitArray = arrayBoard => {\n  setArrayBoard(arrayBoard)\n}\n\nconst onTick =  (array_new) => {\n  setArrayBoard(array_new)\n}\n\nconst onSwitchPiece = (data) => {\n  setCurrentPiece(data)\n}\n\nconst [count, setCount] = useState(0)\n  const [isWin, setWin] = useState(-1)\n  const [piecesWin, setPiecesWin] = useState(null)\n  \n  const handleDialog = ({open, title, content}) => {\n    setDialogState({open: open, content, title})\n  }\n  const tick= (row, col) => {\n    if (isWin === 1) {\n      return;\n    }\n\n    let count_tmp = count + 1;\n    setCount(count_tmp );\n\n    // update board \n    let newArray = [...arrayBoard];\n    newArray[row][col] = currentPiece;\n    onTick(newArray);\n\n    // check win \n    const updatedPiecesWin = isWinning(newArray, row, col, currentPiece);\n    if (updatedPiecesWin.length > 0) {\n      setWin(1)\n      setPiecesWin(updatedPiecesWin)\n    \n    } else if (count_tmp ===  numberCell * numberCell) {\n      setWin(0)\n    } else {\n      // switch player\n      console.log(\"ðŸš€ ~ tick ~ currentPiece:\", currentPiece)\n      onSwitchPiece(currentPiece === pieces.X ? pieces.O : pieces.X);\n      const currentPlayer = currentPiece === pieces.X ? player1 : player2\n      const title = `${currentPlayer}'s turn`\n      handleDialog({open: true, title, content: 'test'})\n      console.log(\"ðŸš€ ~ tick ~ title:\", title)\n    }\n  }\n\n  const resetMap = () => {\n    onInitArray(\n      Array(numberCell)\n        .fill(null)\n        .map(() => Array(numberCell).fill(null))\n    );\n    onSwitchPiece(pieces.X);\n    setCount(0)\n    setWin(-1)\n    setPiecesWin(null)\n  }\n\n\n  \n  return {\n    numberCell,\n    currentPiece,\n    arrayBoard,\n    onSetNumberCell,\n    onInitArray,\n    onTick,\n    onSwitchPiece,\n    tick, isWin, piecesWin, resetMap,\n    handleDialog,\n    dialogState,\n    player1,\n    player2,\n    handleNameChange\n  }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}