{"ast":null,"code":"import _toConsumableArray from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from \"react\";\nimport { pieces } from \"../constants/action.types\";\nimport { isWinning } from \"../algorithm/main\";\nimport { valentines, news, code } from \"../questions\";\nimport { data as ingredients } from \"../components/common/wheel\";\nvar usePlayers = function usePlayers() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    player1 = _useState2[0],\n    setPlayer1 = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    player2 = _useState4[0],\n    setPlayer2 = _useState4[1];\n  var handleNameChange = function handleNameChange(e) {\n    return function (type) {\n      if (type === \"player1\") {\n        setPlayer1(e.target.value);\n      } else if (type === \"player2\") {\n        setPlayer2(e.target.value);\n      }\n    };\n  };\n  return {\n    player1: player1,\n    player2: player2,\n    handleNameChange: handleNameChange\n  };\n};\nexport var usePlayerItems = function usePlayerItems(props) {\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    player1Items = _useState6[0],\n    setPlayer1Items = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    player2Items = _useState8[0],\n    setPlayer2Items = _useState8[1];\n  var handlePlayerItems = function handlePlayerItems(_ref) {\n    var player = _ref.player,\n      item = _ref.item;\n    var fn = player === \"player1\" ? setPlayer1Items : setPlayer2Items;\n    var items = player === \"player1\" ? player1Items : player2Items;\n    fn([].concat(_toConsumableArray(items), [item]));\n  };\n  return {\n    player1Items: player1Items,\n    player2Items: player2Items,\n    handlePlayerItems: handlePlayerItems\n  };\n};\nexport var useHomePage = function useHomePage() {\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    numberCell = _useState10[0],\n    setNumberCell = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    arrayBoard = _useState12[0],\n    setArrayBoard = _useState12[1];\n  var _useState13 = useState(pieces.X),\n    _useState14 = _slicedToArray(_useState13, 2),\n    currentPiece = _useState14[0],\n    setCurrentPiece = _useState14[1];\n  var _useState15 = useState({\n      open: false,\n      title: \"\",\n      content: \"\",\n      currentPiece: \"X\"\n    }),\n    _useState16 = _slicedToArray(_useState15, 2),\n    dialogState = _useState16[0],\n    setDialogState = _useState16[1];\n  var _usePlayerItems = usePlayerItems(),\n    player1Items = _usePlayerItems.player1Items,\n    player2Items = _usePlayerItems.player2Items,\n    handlePlayerItems = _usePlayerItems.handlePlayerItems;\n  var _usePlayers = usePlayers(),\n    player1 = _usePlayers.player1,\n    player2 = _usePlayers.player2,\n    handleNameChange = _usePlayers.handleNameChange;\n  console.log({\n    player1: player1,\n    player2: player2\n  });\n  var onSetNumberCell = function onSetNumberCell(numberCell) {\n    setNumberCell(parseInt(numberCell));\n  };\n  var onInitArray = function onInitArray(arrayBoard) {\n    setArrayBoard(arrayBoard);\n  };\n  var onTick = function onTick(array_new) {\n    setArrayBoard(array_new);\n  };\n  var onSwitchPiece = function onSwitchPiece(data) {\n    setCurrentPiece(data);\n  };\n  var _useState17 = useState(0),\n    _useState18 = _slicedToArray(_useState17, 2),\n    count = _useState18[0],\n    setCount = _useState18[1];\n  var _useState19 = useState(-1),\n    _useState20 = _slicedToArray(_useState19, 2),\n    isWin = _useState20[0],\n    setWin = _useState20[1];\n  var _useState21 = useState(null),\n    _useState22 = _slicedToArray(_useState21, 2),\n    piecesWin = _useState22[0],\n    setPiecesWin = _useState22[1];\n  var _useState23 = useState([]),\n    _useState24 = _slicedToArray(_useState23, 2),\n    haveIt = _useState24[0],\n    setHaveIt = _useState24[1];\n  console.log(\"ðŸš€ ~ useHomePage ~ haveIt:\", haveIt);\n  function generateUniqueRandom(maxNr) {\n    console.log(\"ðŸš€ ~ generateUniqueRandom ~ maxNr:\", maxNr);\n\n    //Generate random number\n    // //Coerce to number by boxing\n    var random = (Math.random() * maxNr).toFixed();\n    random = Number(random);\n    console.log(\"ðŸš€ ~ generateUniqueRandom ~ random:\", random);\n    if (!haveIt.includes(random)) {\n      setHaveIt([].concat(_toConsumableArray(haveIt), [random]));\n      return random;\n    } else {\n      if (haveIt.length <= maxNr) {\n        //Recursively generate number\n        return generateUniqueRandom(maxNr);\n      } else {\n        console.log(\"No more questions available.\");\n        return null;\n      }\n    }\n  }\n  var handleDialog = function handleDialog(_ref2) {\n    var open = _ref2.open,\n      title = _ref2.title,\n      currentPiece = _ref2.currentPiece;\n    if (open) {\n      var list = [].concat(_toConsumableArray(valentines), _toConsumableArray(news), _toConsumableArray(code));\n      var ranNum = generateUniqueRandom(list.length - 1);\n      var item = typeof ranNum === \"number\" ? list[ranNum] : {};\n      var content = item.question;\n      var answer = item.answer;\n      var img = item.img;\n      setDialogState({\n        open: open,\n        content: content,\n        title: title,\n        answer: answer,\n        currentPiece: currentPiece,\n        img: img\n      });\n    } else {\n      setDialogState({\n        open: false,\n        title: \"\",\n        content: \"\",\n        img: \"\"\n      });\n    }\n  };\n  var tick = function tick(row, col) {\n    if (isWin === 1) {\n      return;\n    }\n    var count_tmp = count + 1;\n    setCount(count_tmp);\n\n    // update board\n    var newArray = _toConsumableArray(arrayBoard);\n    newArray[row][col] = currentPiece;\n    onTick(newArray);\n\n    // check win\n    var updatedPiecesWin = isWinning(newArray, row, col, currentPiece);\n    if (updatedPiecesWin.length > 0) {\n      var currentPlayer = currentPiece === pieces.X ? \"Player 1\" : \"Player 2\";\n      var title = \"\".concat(currentPlayer, \"'s turn\");\n      setWin(1);\n      setPiecesWin(updatedPiecesWin);\n      handleDialog({\n        open: true,\n        title: title,\n        currentPiece: currentPiece\n      });\n    } else if (count_tmp === numberCell * numberCell) {\n      setWin(0);\n    } else {\n      // switch player\n      onSwitchPiece(currentPiece === pieces.X ? pieces.O : pieces.X);\n      var _currentPlayer = currentPiece === pieces.X ? player1 || \"Player 1\" : player2 || \"Player 2\";\n      var _title = \"\".concat(_currentPlayer, \"'s turn\");\n      handleDialog({\n        open: true,\n        title: _title,\n        currentPiece: currentPiece\n      });\n    }\n  };\n  var resetMap = function resetMap() {\n    onInitArray(Array(numberCell).fill(null).map(function () {\n      return Array(numberCell).fill(null);\n    }));\n    onSwitchPiece(pieces.X);\n    setCount(0);\n    setWin(-1);\n    setPiecesWin(null);\n  };\n  return {\n    numberCell: numberCell,\n    setNumberCell: function setNumberCell(val) {\n      var result = parseInt(val);\n      onSetNumberCell(result);\n      onInitArray(Array(result).fill(null).map(function () {\n        return Array(result).fill(null);\n      }));\n    },\n    currentPiece: currentPiece,\n    arrayBoard: arrayBoard,\n    onSetNumberCell: onSetNumberCell,\n    onInitArray: onInitArray,\n    onTick: onTick,\n    onSwitchPiece: onSwitchPiece,\n    tick: tick,\n    isWin: isWin,\n    piecesWin: piecesWin,\n    resetMap: resetMap,\n    handleDialog: handleDialog,\n    dialogState: dialogState,\n    player1: player1,\n    player2: player2,\n    handleNameChange: handleNameChange,\n    player1Items: player1Items,\n    player2Items: player2Items,\n    handlePlayerItems: handlePlayerItems\n  };\n};","map":{"version":3,"names":["useState","pieces","isWinning","valentines","news","code","data","ingredients","usePlayers","_useState","_useState2","_slicedToArray","player1","setPlayer1","_useState3","_useState4","player2","setPlayer2","handleNameChange","e","type","target","value","usePlayerItems","props","_useState5","_useState6","player1Items","setPlayer1Items","_useState7","_useState8","player2Items","setPlayer2Items","handlePlayerItems","_ref","player","item","fn","items","concat","_toConsumableArray","useHomePage","_useState9","_useState10","numberCell","setNumberCell","_useState11","_useState12","arrayBoard","setArrayBoard","_useState13","X","_useState14","currentPiece","setCurrentPiece","_useState15","open","title","content","_useState16","dialogState","setDialogState","_usePlayerItems","_usePlayers","console","log","onSetNumberCell","parseInt","onInitArray","onTick","array_new","onSwitchPiece","_useState17","_useState18","count","setCount","_useState19","_useState20","isWin","setWin","_useState21","_useState22","piecesWin","setPiecesWin","_useState23","_useState24","haveIt","setHaveIt","generateUniqueRandom","maxNr","random","Math","toFixed","Number","includes","length","handleDialog","_ref2","list","ranNum","question","answer","img","tick","row","col","count_tmp","newArray","updatedPiecesWin","currentPlayer","O","resetMap","Array","fill","map","val","result"],"sources":["/Users/thunguyen/Downloads/tic-tac-toe-valentine/src/hooks/index.js"],"sourcesContent":["import { useState } from \"react\";\nimport { pieces } from \"../constants/action.types\";\nimport { isWinning } from \"../algorithm/main\";\nimport { valentines, news, code } from \"../questions\";\nimport { data as ingredients } from \"../components/common/wheel\";\n\nconst usePlayers = () => {\n  const [player1, setPlayer1] = useState(\"\");\n  const [player2, setPlayer2] = useState(\"\");\n  const handleNameChange = (e) => (type) => {\n    if (type === \"player1\") {\n      setPlayer1(e.target.value);\n    } else if (type === \"player2\") {\n      setPlayer2(e.target.value);\n    }\n  };\n  return {\n    player1,\n    player2,\n    handleNameChange,\n  };\n};\n\nexport const usePlayerItems = (props) => {\n  const [player1Items, setPlayer1Items] = useState([]);\n  const [player2Items, setPlayer2Items] = useState([]);\n\n  const handlePlayerItems = ({ player, item }) => {\n    const fn = player === \"player1\" ? setPlayer1Items : setPlayer2Items;\n    const items = player === \"player1\" ? player1Items : player2Items;\n\n    fn([...items, item]);\n  };\n\n  return {\n    player1Items,\n    player2Items,\n    handlePlayerItems,\n  };\n};\n\nexport const useHomePage = () => {\n  const [numberCell, setNumberCell] = useState(null);\n  const [arrayBoard, setArrayBoard] = useState(null);\n  const [currentPiece, setCurrentPiece] = useState(pieces.X);\n  const [dialogState, setDialogState] = useState({\n    open: false,\n    title: \"\",\n    content: \"\",\n    currentPiece: \"X\",\n  });\n\n  const { player1Items, player2Items, handlePlayerItems } = usePlayerItems();\n\n  const { player1, player2, handleNameChange } = usePlayers();\n  console.log({ player1, player2 });\n  const onSetNumberCell = (numberCell) => {\n    setNumberCell(parseInt(numberCell));\n  };\n\n  const onInitArray = (arrayBoard) => {\n    setArrayBoard(arrayBoard);\n  };\n\n  const onTick = (array_new) => {\n    setArrayBoard(array_new);\n  };\n\n  const onSwitchPiece = (data) => {\n    setCurrentPiece(data);\n  };\n\n  const [count, setCount] = useState(0);\n  const [isWin, setWin] = useState(-1);\n  const [piecesWin, setPiecesWin] = useState(null);\n\n  const [haveIt, setHaveIt] = useState([]);\n  console.log(\"ðŸš€ ~ useHomePage ~ haveIt:\", haveIt);\n\n  function generateUniqueRandom(maxNr) {\n    console.log(\"ðŸš€ ~ generateUniqueRandom ~ maxNr:\", maxNr);\n\n    //Generate random number\n    // //Coerce to number by boxing\n    let random = (Math.random() * maxNr).toFixed();\n    random = Number(random);\n    console.log(\"ðŸš€ ~ generateUniqueRandom ~ random:\", random);\n\n    if (!haveIt.includes(random)) {\n      setHaveIt([...haveIt, random]);\n      return random;\n    } else {\n      if (haveIt.length <= maxNr) {\n        //Recursively generate number\n        return generateUniqueRandom(maxNr);\n      } else {\n        console.log(\"No more questions available.\");\n        return null;\n      }\n    }\n  }\n\n  const handleDialog = ({ open, title, currentPiece }) => {\n    if (open) {\n      const list = [...valentines, ...news, ...code];\n      const ranNum = generateUniqueRandom(list.length - 1);\n      const item = typeof ranNum === \"number\" ? list[ranNum] : {};\n\n      const content = item.question;\n      const answer = item.answer;\n      const img = item.img;\n      setDialogState({ open, content, title, answer, currentPiece, img });\n    } else {\n      setDialogState({\n        open: false,\n        title: \"\",\n        content: \"\",\n        img: \"\",\n      });\n    }\n  };\n  const tick = (row, col) => {\n    if (isWin === 1) {\n      return;\n    }\n\n    let count_tmp = count + 1;\n    setCount(count_tmp);\n\n    // update board\n    let newArray = [...arrayBoard];\n    newArray[row][col] = currentPiece;\n    onTick(newArray);\n\n    // check win\n    const updatedPiecesWin = isWinning(newArray, row, col, currentPiece);\n    if (updatedPiecesWin.length > 0) {\n      const currentPlayer = currentPiece === pieces.X ? \"Player 1\" : \"Player 2\";\n      const title = `${currentPlayer}'s turn`;\n      setWin(1);\n      setPiecesWin(updatedPiecesWin);\n      handleDialog({ open: true, title, currentPiece: currentPiece });\n    } else if (count_tmp === numberCell * numberCell) {\n      setWin(0);\n    } else {\n      // switch player\n      onSwitchPiece(currentPiece === pieces.X ? pieces.O : pieces.X);\n      const currentPlayer =\n        currentPiece === pieces.X\n          ? player1 || \"Player 1\"\n          : player2 || \"Player 2\";\n      const title = `${currentPlayer}'s turn`;\n      handleDialog({ open: true, title, currentPiece: currentPiece });\n    }\n  };\n\n  const resetMap = () => {\n    onInitArray(\n      Array(numberCell)\n        .fill(null)\n        .map(() => Array(numberCell).fill(null))\n    );\n    onSwitchPiece(pieces.X);\n    setCount(0);\n    setWin(-1);\n    setPiecesWin(null);\n  };\n\n  return {\n    numberCell,\n    setNumberCell: (val) => {\n      const result = parseInt(val);\n      onSetNumberCell(result);\n      onInitArray(\n        Array(result)\n          .fill(null)\n          .map(() => Array(result).fill(null))\n      );\n    },\n    currentPiece,\n    arrayBoard,\n    onSetNumberCell,\n    onInitArray,\n    onTick,\n    onSwitchPiece,\n    tick,\n    isWin,\n    piecesWin,\n    resetMap,\n    handleDialog,\n    dialogState,\n    player1,\n    player2,\n    handleNameChange,\n    player1Items,\n    player2Items,\n    handlePlayerItems,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}