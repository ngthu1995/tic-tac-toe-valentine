{"ast":null,"code":"import _toConsumableArray from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/src/containers/home.container.js\";\nimport React, { useState } from \"react\";\nimport Home from \"../components/home\";\nimport * as actions from \"../actions/home.action\";\nimport { pieces } from \"../constants/action.types\";\nimport { isWinning } from \"../algorithm/main\";\nvar HomeContainer = function HomeContainer(props) {\n  var array_board = props.array_board,\n    piece_current = props.piece_current,\n    number_cell = props.number_cell;\n  var numberCell = props.numberCell,\n    currentPiece = props.currentPiece,\n    arrayBoard = props.arrayBoard,\n    onSetNumberCell = props.onSetNumberCell,\n    onInitArray = props.onInitArray,\n    onTick = props.onTick,\n    onSwitchPiece = props.onSwitchPiece;\n  console.log(\"ðŸš€ ~ HomeContainer ~ props:\", props);\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var _useState3 = useState(-1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isWin = _useState4[0],\n    setWin = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    piecesWin = _useState6[0],\n    setPiecesWin = _useState6[1];\n  var _tick = function tick(row, col) {\n    if (isWin === 1) {\n      return;\n    }\n    // count number of tick \n    var count_tmp = count + 1;\n    setCount(count_tmp);\n\n    // update board \n    var newArray = _toConsumableArray(array_board);\n    newArray[row][col] = piece_current;\n    actions.tick(newArray);\n\n    // check win \n    var updatedPiecesWin = isWinning(newArray, row, col, piece_current);\n    if (updatedPiecesWin.length > 0) {\n      setWin(1);\n      setPiecesWin(updatedPiecesWin);\n    } else if (count_tmp == number_cell * number_cell) {\n      setWin(0);\n    } else {\n      // switch player\n      actions.switch_piece(piece_current == pieces.X ? pieces.O : pieces.X);\n    }\n  };\n  var _reset_map = function reset_map() {\n    actions.init_array(Array(number_cell).fill(null).map(function () {\n      return Array(number_cell).fill(null);\n    }));\n    actions.switch_piece(pieces.X);\n    setCount(0);\n    setWin(-1);\n    setPiecesWin(null);\n  };\n  return /*#__PURE__*/React.createElement(Home, {\n    setNumberCell: function setNumberCell(numberCell) {\n      var number_cell = parseInt(numberCell);\n      actions.set_number_cell(number_cell);\n      actions.init_array(Array(number_cell).fill(null).map(function () {\n        return Array(number_cell).fill(null);\n      }));\n    },\n    array_board: array_board,\n    tick: function tick(row, col) {\n      return _tick(row, col);\n    },\n    piece_current: piece_current,\n    is_win: isWin,\n    pieces_win: piecesWin,\n    reset_map: function reset_map() {\n      return _reset_map();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  });\n};\nexport default HomeContainer;","map":{"version":3,"names":["React","useState","Home","actions","pieces","isWinning","HomeContainer","props","array_board","piece_current","number_cell","numberCell","currentPiece","arrayBoard","onSetNumberCell","onInitArray","onTick","onSwitchPiece","console","log","_useState","_useState2","_slicedToArray","count","setCount","_useState3","_useState4","isWin","setWin","_useState5","_useState6","piecesWin","setPiecesWin","tick","row","col","count_tmp","newArray","_toConsumableArray","updatedPiecesWin","length","switch_piece","X","O","reset_map","init_array","Array","fill","map","createElement","setNumberCell","parseInt","set_number_cell","is_win","pieces_win","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/thunguyen/Downloads/tic-tac-toe-valentine/src/containers/home.container.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Home from \"../components/home\";\nimport * as actions from \"../actions/home.action\";\nimport { pieces } from \"../constants/action.types\";\nimport { isWinning } from \"../algorithm/main\";\n\nconst HomeContainer = (props) => {\n  const { array_board, piece_current, number_cell } = props\n  const { numberCell,\n    currentPiece,\n    arrayBoard,\n    onSetNumberCell,\n    onInitArray,\n    onTick,\n    onSwitchPiece } = props\n  console.log(\"ðŸš€ ~ HomeContainer ~ props:\", props)\n\n  const [count, setCount] = useState(0)\n  const [isWin, setWin] = useState(-1)\n  const [piecesWin, setPiecesWin] = useState(null)\n\n  const tick= (row, col) => {\n    if (isWin === 1) {\n      return;\n    }\n    // count number of tick \n    let count_tmp = count + 1;\n    setCount(count_tmp );\n\n    // update board \n    let newArray = [...array_board];\n    newArray[row][col] = piece_current;\n    actions.tick(newArray);\n\n    // check win \n    const updatedPiecesWin = isWinning(newArray, row, col, piece_current);\n    if (updatedPiecesWin.length > 0) {\n      setWin(1)\n      setPiecesWin(updatedPiecesWin)\n    } else if (count_tmp ==  number_cell * number_cell) {\n      setWin(0)\n    } else {\n      // switch player\n      actions.switch_piece(piece_current == pieces.X ? pieces.O : pieces.X);\n    }\n  }\n\n  const reset_map = () => {\n    actions.init_array(\n      Array(number_cell)\n        .fill(null)\n        .map(() => Array(number_cell).fill(null))\n    );\n    actions.switch_piece(pieces.X);\n    setCount(0)\n    setWin(-1)\n    setPiecesWin(null)\n  }\n\n  return (\n    <Home\n      setNumberCell={numberCell => {\n        const number_cell = parseInt(numberCell);\n        actions.set_number_cell(number_cell);\n        actions.init_array(\n          Array(number_cell)\n            .fill(null)\n            .map(() => Array(number_cell).fill(null))\n        );\n      }}\n      array_board={array_board}\n      tick={(row, col) => tick(row, col)}\n      piece_current={piece_current}\n      is_win={isWin}\n      pieces_win={piecesWin}\n      reset_map={() => reset_map()}\n    />\n  );\n}\n\nexport default HomeContainer"],"mappings":"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"},"metadata":{},"sourceType":"module"}