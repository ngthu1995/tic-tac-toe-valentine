{"ast":null,"code":"import _objectSpread from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from \"react\";\nimport { types, pieces } from \"../constants/action.types\";\nvar initalState = {\n  number_cell: null,\n  arrayBoard: null,\n  currentPiece: pieces.X\n};\nexport var useHomePage = function useHomePage() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    numberCell = _useState2[0],\n    setNumberCell = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    arrayBoard = _useState4[0],\n    setArrayBoard = _useState4[1];\n  var _useState5 = useState(pieces.X),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentPiece = _useState6[0],\n    setCurrentPiece = _useState6[1];\n  var main = function main() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    var updatedState = state;\n    switch (action.type) {\n      case types.SET_NUMBER_CELL:\n        {\n          updatedState = _objectSpread({}, state, {\n            number_cell: parseInt(action.number_cell)\n          });\n          break;\n        }\n      case types.INIT_ARRAY:\n        {\n          updatedState = _objectSpread({}, state, {\n            arrayBoard: action.arrayBoard\n          });\n          break;\n        }\n      case types.SWITCH_PIECE:\n        {\n          updatedState = _objectSpread({}, state, {\n            currentPiece: action.data\n          });\n          break;\n        }\n      case types.TICK:\n        {\n          updatedState = _objectSpread({}, state, {\n            arrayBoard: action.array_new\n          });\n          break;\n        }\n      default:\n        updatedState = state;\n    }\n  };\n  var handleMainAction = function handleMainAction(type, data) {\n    switch (type) {\n      case types.SET_NUMBER_CELL:\n        {\n          setNumberCell(parseInt(data));\n          break;\n        }\n      case types.INIT_ARRAY:\n        {\n          setArrayBoard(data);\n          break;\n        }\n      case types.SWITCH_PIECE:\n        {\n          setCurrentPiece(data);\n          break;\n        }\n      case types.TICK:\n        {\n          setArrayBoard(data);\n          break;\n        }\n      default:\n    }\n  };\n  var onSetNumberCell = function onSetNumberCell(number_cell) {\n    setNumberCell(parseInt(number_cell));\n  };\n  var onInitArray = function onInitArray(arrayBoard) {\n    console.log(\"ðŸš€ ~ onInitArray ~ arrayBoard:\", arrayBoard);\n    setArrayBoard(arrayBoard);\n  };\n  var onTick = function onTick(array_new) {\n    setArrayBoard(array_new);\n  };\n  var onSwitchPiece = function onSwitchPiece(data) {\n    setCurrentPiece(data);\n  };\n  return {\n    numberCell: numberCell,\n    currentPiece: currentPiece,\n    arrayBoard: arrayBoard,\n    onSetNumberCell: onSetNumberCell,\n    onInitArray: onInitArray,\n    onTick: onTick,\n    onSwitchPiece: onSwitchPiece\n  };\n};","map":{"version":3,"names":["useState","types","pieces","initalState","number_cell","arrayBoard","currentPiece","X","useHomePage","_useState","_useState2","_slicedToArray","numberCell","setNumberCell","_useState3","_useState4","setArrayBoard","_useState5","_useState6","setCurrentPiece","main","state","arguments","length","undefined","action","updatedState","type","SET_NUMBER_CELL","_objectSpread","parseInt","INIT_ARRAY","SWITCH_PIECE","data","TICK","array_new","handleMainAction","onSetNumberCell","onInitArray","console","log","onTick","onSwitchPiece"],"sources":["/Users/thunguyen/Downloads/tic-tac-toe-valentine/src/hooks/index.js"],"sourcesContent":["import { useState } from \"react\";\nimport { types, pieces } from \"../constants/action.types\";\n\nconst initalState = {\n  number_cell: null,\n  arrayBoard: null,\n  currentPiece: pieces.X\n};\n\n\nexport const useHomePage = () => {\n  const [numberCell, setNumberCell] = useState(null)\n  const [arrayBoard, setArrayBoard] = useState(null)\n  const [currentPiece, setCurrentPiece] = useState(pieces.X)\n  \n  const main = (state = initalState, action) => {\n    let updatedState = state\n    switch (action.type) {\n      case types.SET_NUMBER_CELL: {\n        updatedState ={ ...state, number_cell: parseInt(action.number_cell) };\n        break\n      }\n      case types.INIT_ARRAY: {\n        updatedState ={ ...state, arrayBoard: action.arrayBoard };\n        break\n      }\n      case types.SWITCH_PIECE: {\n        updatedState ={ ...state, currentPiece: action.data };\n        break\n      }\n      case types.TICK: {\n        updatedState ={...state, arrayBoard: action.array_new}\n        break\n      }\n      default:\n        updatedState =state;\n    }\n  };\n\n  const handleMainAction = (type, data) => {\n    switch (type) {\n      case types.SET_NUMBER_CELL: {\n        setNumberCell(parseInt(data))\n        break\n      }\n      case types.INIT_ARRAY: {\n        setArrayBoard(data)\n        break\n      }\n      case types.SWITCH_PIECE: {\n        setCurrentPiece(data)\n        break\n      }\n      case types.TICK: {\n        setArrayBoard(data)\n        break\n      }\n      default:\n    }\n  }\n\n  const onSetNumberCell = number_cell => {\n    setNumberCell(parseInt(number_cell))\n  }\n\nconst onInitArray = arrayBoard => {\n  console.log(\"ðŸš€ ~ onInitArray ~ arrayBoard:\", arrayBoard)\n  setArrayBoard(arrayBoard)\n}\n\nconst onTick =  (array_new) => {\n  setArrayBoard(array_new)\n}\n\nconst onSwitchPiece = (data) => {\n  setCurrentPiece(data)\n}\n  \n  return {\n    numberCell,\n    currentPiece,\n    arrayBoard,\n    onSetNumberCell,\n    onInitArray,\n    onTick,\n    onSwitchPiece\n  }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}