{"ast":null,"code":"import _toConsumableArray from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from \"react\";\nimport { pieces } from \"../constants/action.types\";\nimport { isWinning } from \"../algorithm/main\";\nimport { valentines, news, code } from \"../questions\";\nvar usePlayers = function usePlayers() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    player1 = _useState2[0],\n    setPlayer1 = _useState2[1];\n  console.log(\"ðŸš€ ~ usePlayers ~ player1:\", player1);\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    player2 = _useState4[0],\n    setPlayer2 = _useState4[1];\n  console.log(\"ðŸš€ ~ usePlayers ~ player2:\", player2);\n  var handleNameChange = function handleNameChange(e) {\n    return function (type) {\n      console.log(\"ðŸš€ ~ handleNameChange ~ type:\", type);\n      if (type === 'player1') {\n        setPlayer1(e.target.value);\n      } else if (type === 'player2') {\n        setPlayer2(e.target.value);\n      }\n    };\n  };\n  return {\n    player1: player1,\n    player2: player2,\n    handleNameChange: handleNameChange\n  };\n};\nexport var useHomePage = function useHomePage() {\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    numberCell = _useState6[0],\n    setNumberCell = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    arrayBoard = _useState8[0],\n    setArrayBoard = _useState8[1];\n  var _useState9 = useState(pieces.X),\n    _useState10 = _slicedToArray(_useState9, 2),\n    currentPiece = _useState10[0],\n    setCurrentPiece = _useState10[1];\n  var _useState11 = useState({\n      open: false,\n      title: '',\n      content: ''\n    }),\n    _useState12 = _slicedToArray(_useState11, 2),\n    dialogState = _useState12[0],\n    setDialogState = _useState12[1];\n  var _usePlayers = usePlayers(),\n    player1 = _usePlayers.player1,\n    player2 = _usePlayers.player2,\n    handleNameChange = _usePlayers.handleNameChange;\n  var onSetNumberCell = function onSetNumberCell(numberCell) {\n    setNumberCell(parseInt(numberCell));\n  };\n  var onInitArray = function onInitArray(arrayBoard) {\n    setArrayBoard(arrayBoard);\n  };\n  var onTick = function onTick(array_new) {\n    setArrayBoard(array_new);\n  };\n  var onSwitchPiece = function onSwitchPiece(data) {\n    setCurrentPiece(data);\n  };\n  var _useState13 = useState(0),\n    _useState14 = _slicedToArray(_useState13, 2),\n    count = _useState14[0],\n    setCount = _useState14[1];\n  var _useState15 = useState(-1),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isWin = _useState16[0],\n    setWin = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    piecesWin = _useState18[0],\n    setPiecesWin = _useState18[1];\n  var handleDialog = function handleDialog(_ref) {\n    var open = _ref.open,\n      title = _ref.title;\n    var list = [].concat(_toConsumableArray(valentines), _toConsumableArray(news), _toConsumableArray(code));\n    var item = list[list.length * Math.random() | 0];\n    console.log(\"ðŸš€ ~ handleDialog ~ item:\", item);\n    var content = item.question;\n    var answer = item.answer;\n    setDialogState({\n      open: open,\n      content: content,\n      title: title,\n      answer: answer\n    });\n  };\n  var tick = function tick(row, col) {\n    if (isWin === 1) {\n      return;\n    }\n    var count_tmp = count + 1;\n    setCount(count_tmp);\n\n    // update board \n    var newArray = _toConsumableArray(arrayBoard);\n    newArray[row][col] = currentPiece;\n    onTick(newArray);\n\n    // check win \n    var updatedPiecesWin = isWinning(newArray, row, col, currentPiece);\n    if (updatedPiecesWin.length > 0) {\n      setWin(1);\n      setPiecesWin(updatedPiecesWin);\n    } else if (count_tmp === numberCell * numberCell) {\n      setWin(0);\n    } else {\n      // switch player\n      console.log(\"ðŸš€ ~ tick ~ currentPiece:\", currentPiece);\n      onSwitchPiece(currentPiece === pieces.X ? pieces.O : pieces.X);\n      var currentPlayer = currentPiece === pieces.X ? 'Player 1' : 'Player 2';\n      var title = \"\".concat(currentPlayer, \"'s turn\");\n      handleDialog({\n        open: true,\n        title: title\n      });\n      console.log(\"ðŸš€ ~ tick ~ title:\", title);\n    }\n  };\n  var resetMap = function resetMap() {\n    onInitArray(Array(numberCell).fill(null).map(function () {\n      return Array(numberCell).fill(null);\n    }));\n    onSwitchPiece(pieces.X);\n    setCount(0);\n    setWin(-1);\n    setPiecesWin(null);\n  };\n  return {\n    numberCell: numberCell,\n    currentPiece: currentPiece,\n    arrayBoard: arrayBoard,\n    onSetNumberCell: onSetNumberCell,\n    onInitArray: onInitArray,\n    onTick: onTick,\n    onSwitchPiece: onSwitchPiece,\n    tick: tick,\n    isWin: isWin,\n    piecesWin: piecesWin,\n    resetMap: resetMap,\n    handleDialog: handleDialog,\n    dialogState: dialogState,\n    player1: player1,\n    player2: player2,\n    handleNameChange: handleNameChange\n  };\n};","map":{"version":3,"names":["useState","pieces","isWinning","valentines","news","code","usePlayers","_useState","_useState2","_slicedToArray","player1","setPlayer1","console","log","_useState3","_useState4","player2","setPlayer2","handleNameChange","e","type","target","value","useHomePage","_useState5","_useState6","numberCell","setNumberCell","_useState7","_useState8","arrayBoard","setArrayBoard","_useState9","X","_useState10","currentPiece","setCurrentPiece","_useState11","open","title","content","_useState12","dialogState","setDialogState","_usePlayers","onSetNumberCell","parseInt","onInitArray","onTick","array_new","onSwitchPiece","data","_useState13","_useState14","count","setCount","_useState15","_useState16","isWin","setWin","_useState17","_useState18","piecesWin","setPiecesWin","handleDialog","_ref","list","concat","_toConsumableArray","item","length","Math","random","question","answer","tick","row","col","count_tmp","newArray","updatedPiecesWin","O","currentPlayer","resetMap","Array","fill","map"],"sources":["/Users/thunguyen/Downloads/tic-tac-toe-valentine/src/hooks/index.js"],"sourcesContent":["import { useState } from \"react\";\nimport { pieces } from \"../constants/action.types\";\nimport { isWinning } from \"../algorithm/main\";\nimport { valentines, news, code } from \"../questions\";\n\nconst usePlayers = () => {\n  const [player1, setPlayer1] = useState('')\n  console.log(\"ðŸš€ ~ usePlayers ~ player1:\", player1)\n  const [player2, setPlayer2] = useState('')\n  console.log(\"ðŸš€ ~ usePlayers ~ player2:\", player2)\n  const handleNameChange = (e) => type => {\n    console.log(\"ðŸš€ ~ handleNameChange ~ type:\", type)\n    if (type === 'player1'){\n      setPlayer1(e.target.value)\n    } else if (type === 'player2'){\n      setPlayer2(e.target.value)\n    }\n  }\n  return {\n    player1,\n    player2,\n    handleNameChange\n  }\n}\n\nexport const useHomePage = () => {\n  const [numberCell, setNumberCell] = useState(null)\n  const [arrayBoard, setArrayBoard] = useState(null)\n  const [currentPiece, setCurrentPiece] = useState(pieces.X)\n  const [dialogState, setDialogState] = useState({\n    open: false,\n    title: '',\n    content: ''\n  })\n\n  const {\n    player1,\n    player2,\n    handleNameChange\n  } = usePlayers()\n  const onSetNumberCell = numberCell => {\n    setNumberCell(parseInt(numberCell))\n  }\n\nconst onInitArray = arrayBoard => {\n  setArrayBoard(arrayBoard)\n}\n\nconst onTick =  (array_new) => {\n  setArrayBoard(array_new)\n}\n\nconst onSwitchPiece = (data) => {\n  setCurrentPiece(data)\n}\n\nconst [count, setCount] = useState(0)\n  const [isWin, setWin] = useState(-1)\n  const [piecesWin, setPiecesWin] = useState(null)\n  \n  const handleDialog = ({open, title}) => {\n    const list = [...valentines, ...news, ...code]\n    const item = list[list.length * Math.random() | 0]\n    console.log(\"ðŸš€ ~ handleDialog ~ item:\", item)\n    const content = item.question\n    const answer = item.answer\n    setDialogState({open: open, content, title, answer})\n  }\n  const tick= (row, col) => {\n    if (isWin === 1) {\n      return;\n    }\n\n    let count_tmp = count + 1;\n    setCount(count_tmp );\n\n    // update board \n    let newArray = [...arrayBoard];\n    newArray[row][col] = currentPiece;\n    onTick(newArray);\n\n    // check win \n    const updatedPiecesWin = isWinning(newArray, row, col, currentPiece);\n    if (updatedPiecesWin.length > 0) {\n      setWin(1)\n      setPiecesWin(updatedPiecesWin)\n    \n    } else if (count_tmp ===  numberCell * numberCell) {\n      setWin(0)\n    } else {\n      // switch player\n      console.log(\"ðŸš€ ~ tick ~ currentPiece:\", currentPiece)\n      onSwitchPiece(currentPiece === pieces.X ? pieces.O : pieces.X);\n      const currentPlayer = currentPiece === pieces.X ? 'Player 1' : 'Player 2'\n      const title = `${currentPlayer}'s turn`\n      handleDialog({open: true, title})\n      console.log(\"ðŸš€ ~ tick ~ title:\", title)\n    }\n  }\n\n  const resetMap = () => {\n    onInitArray(\n      Array(numberCell)\n        .fill(null)\n        .map(() => Array(numberCell).fill(null))\n    );\n    onSwitchPiece(pieces.X);\n    setCount(0)\n    setWin(-1)\n    setPiecesWin(null)\n  }\n\n\n  \n  return {\n    numberCell,\n    currentPiece,\n    arrayBoard,\n    onSetNumberCell,\n    onInitArray,\n    onTick,\n    onSwitchPiece,\n    tick, isWin, piecesWin, resetMap,\n    handleDialog,\n    dialogState,\n    player1,\n    player2,\n    handleNameChange\n  }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}