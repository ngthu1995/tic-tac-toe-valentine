{"ast":null,"code":"import _toConsumableArray from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/thunguyen/Downloads/tic-tac-toe-valentine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from \"react\";\nimport { pieces } from \"../constants/action.types\";\nimport { isWinning } from \"../algorithm/main\";\nimport { valentines, news, code } from \"../questions\";\nvar usePlayers = function usePlayers() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    player1 = _useState2[0],\n    setPlayer1 = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    player2 = _useState4[0],\n    setPlayer2 = _useState4[1];\n  var handleNameChange = function handleNameChange(e) {\n    return function (type) {\n      if (type === 'player1') {\n        setPlayer1(e.target.value);\n      } else if (type === 'player2') {\n        setPlayer2(e.target.value);\n      }\n    };\n  };\n  return {\n    player1: player1,\n    player2: player2,\n    handleNameChange: handleNameChange\n  };\n};\nexport var useHomePage = function useHomePage() {\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    numberCell = _useState6[0],\n    setNumberCell = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    arrayBoard = _useState8[0],\n    setArrayBoard = _useState8[1];\n  var _useState9 = useState(pieces.X),\n    _useState10 = _slicedToArray(_useState9, 2),\n    currentPiece = _useState10[0],\n    setCurrentPiece = _useState10[1];\n  var _useState11 = useState({\n      open: false,\n      title: '',\n      content: ''\n    }),\n    _useState12 = _slicedToArray(_useState11, 2),\n    dialogState = _useState12[0],\n    setDialogState = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    showAnswer = _useState14[0],\n    setShowAnswer = _useState14[1];\n  var _usePlayers = usePlayers(),\n    player1 = _usePlayers.player1,\n    player2 = _usePlayers.player2,\n    handleNameChange = _usePlayers.handleNameChange;\n  var onSetNumberCell = function onSetNumberCell(numberCell) {\n    setNumberCell(parseInt(numberCell));\n  };\n  var onInitArray = function onInitArray(arrayBoard) {\n    setArrayBoard(arrayBoard);\n  };\n  var onTick = function onTick(array_new) {\n    setArrayBoard(array_new);\n  };\n  var onSwitchPiece = function onSwitchPiece(data) {\n    setCurrentPiece(data);\n  };\n  var _useState15 = useState(0),\n    _useState16 = _slicedToArray(_useState15, 2),\n    count = _useState16[0],\n    setCount = _useState16[1];\n  var _useState17 = useState(-1),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isWin = _useState18[0],\n    setWin = _useState18[1];\n  var _useState19 = useState(null),\n    _useState20 = _slicedToArray(_useState19, 2),\n    piecesWin = _useState20[0],\n    setPiecesWin = _useState20[1];\n  var handleDialog = function handleDialog(_ref) {\n    var open = _ref.open,\n      title = _ref.title;\n    var list = [].concat(_toConsumableArray(valentines), _toConsumableArray(news), _toConsumableArray(code));\n    var item = list[list.length * Math.random() | 0];\n    var content = item.question;\n    var answer = item.answer;\n    setDialogState({\n      open: open,\n      content: content,\n      title: title,\n      answer: answer\n    });\n  };\n  var tick = function tick(row, col) {\n    if (isWin === 1) {\n      return;\n    }\n    var count_tmp = count + 1;\n    setCount(count_tmp);\n\n    // update board \n    var newArray = _toConsumableArray(arrayBoard);\n    newArray[row][col] = currentPiece;\n    onTick(newArray);\n\n    // check win \n    var updatedPiecesWin = isWinning(newArray, row, col, currentPiece);\n    if (updatedPiecesWin.length > 0) {\n      setWin(1);\n      setPiecesWin(updatedPiecesWin);\n    } else if (count_tmp === numberCell * numberCell) {\n      setWin(0);\n    } else {\n      // switch player\n      console.log(\"ðŸš€ ~ tick ~ currentPiece:\", currentPiece);\n      onSwitchPiece(currentPiece === pieces.X ? pieces.O : pieces.X);\n      var currentPlayer = currentPiece === pieces.X ? 'Player 1' : 'Player 2';\n      var title = \"\".concat(currentPlayer, \"'s turn\");\n      handleDialog({\n        open: true,\n        title: title\n      });\n    }\n  };\n  var resetMap = function resetMap() {\n    onInitArray(Array(numberCell).fill(null).map(function () {\n      return Array(numberCell).fill(null);\n    }));\n    onSwitchPiece(pieces.X);\n    setCount(0);\n    setWin(-1);\n    setPiecesWin(null);\n  };\n  return {\n    numberCell: numberCell,\n    currentPiece: currentPiece,\n    arrayBoard: arrayBoard,\n    onSetNumberCell: onSetNumberCell,\n    onInitArray: onInitArray,\n    onTick: onTick,\n    onSwitchPiece: onSwitchPiece,\n    tick: tick,\n    isWin: isWin,\n    piecesWin: piecesWin,\n    resetMap: resetMap,\n    handleDialog: handleDialog,\n    dialogState: dialogState,\n    player1: player1,\n    player2: player2,\n    handleNameChange: handleNameChange,\n    showAnswer: showAnswer,\n    setShowAnswer: setShowAnswer\n  };\n};","map":{"version":3,"names":["useState","pieces","isWinning","valentines","news","code","usePlayers","_useState","_useState2","_slicedToArray","player1","setPlayer1","_useState3","_useState4","player2","setPlayer2","handleNameChange","e","type","target","value","useHomePage","_useState5","_useState6","numberCell","setNumberCell","_useState7","_useState8","arrayBoard","setArrayBoard","_useState9","X","_useState10","currentPiece","setCurrentPiece","_useState11","open","title","content","_useState12","dialogState","setDialogState","_useState13","_useState14","showAnswer","setShowAnswer","_usePlayers","onSetNumberCell","parseInt","onInitArray","onTick","array_new","onSwitchPiece","data","_useState15","_useState16","count","setCount","_useState17","_useState18","isWin","setWin","_useState19","_useState20","piecesWin","setPiecesWin","handleDialog","_ref","list","concat","_toConsumableArray","item","length","Math","random","question","answer","tick","row","col","count_tmp","newArray","updatedPiecesWin","console","log","O","currentPlayer","resetMap","Array","fill","map"],"sources":["/Users/thunguyen/Downloads/tic-tac-toe-valentine/src/hooks/index.js"],"sourcesContent":["import { useState } from \"react\";\nimport { pieces } from \"../constants/action.types\";\nimport { isWinning } from \"../algorithm/main\";\nimport { valentines, news, code } from \"../questions\";\n\nconst usePlayers = () => {\n  const [player1, setPlayer1] = useState('')\n  const [player2, setPlayer2] = useState('')\n  const handleNameChange = (e) => type => {\n    if (type === 'player1'){\n      setPlayer1(e.target.value)\n    } else if (type === 'player2'){\n      setPlayer2(e.target.value)\n    }\n  }\n  return {\n    player1,\n    player2,\n    handleNameChange\n  }\n}\n\nexport const useHomePage = () => {\n  const [numberCell, setNumberCell] = useState(null)\n  const [arrayBoard, setArrayBoard] = useState(null)\n  const [currentPiece, setCurrentPiece] = useState(pieces.X)\n  const [dialogState, setDialogState] = useState({\n    open: false,\n    title: '',\n    content: ''\n  })\n  const [showAnswer, setShowAnswer] = useState(false)\n\n  const {\n    player1,\n    player2,\n    handleNameChange\n  } = usePlayers()\n  const onSetNumberCell = numberCell => {\n    setNumberCell(parseInt(numberCell))\n  }\n\nconst onInitArray = arrayBoard => {\n  setArrayBoard(arrayBoard)\n}\n\nconst onTick =  (array_new) => {\n  setArrayBoard(array_new)\n}\n\nconst onSwitchPiece = (data) => {\n  setCurrentPiece(data)\n}\n\nconst [count, setCount] = useState(0)\n  const [isWin, setWin] = useState(-1)\n  const [piecesWin, setPiecesWin] = useState(null)\n  \n  const handleDialog = ({open, title}) => {\n    const list = [...valentines, ...news, ...code]\n    const item = list[list.length * Math.random() | 0]\n    const content = item.question\n    const answer = item.answer\n    setDialogState({open , content, title, answer})\n  }\n  const tick= (row, col) => {\n    if (isWin === 1) {\n      return;\n    }\n\n    let count_tmp = count + 1;\n    setCount(count_tmp );\n\n    // update board \n    let newArray = [...arrayBoard];\n    newArray[row][col] = currentPiece;\n    onTick(newArray);\n\n    // check win \n    const updatedPiecesWin = isWinning(newArray, row, col, currentPiece);\n    if (updatedPiecesWin.length > 0) {\n      setWin(1)\n      setPiecesWin(updatedPiecesWin)\n    \n    } else if (count_tmp ===  numberCell * numberCell) {\n      setWin(0)\n    } else {\n      // switch player\n      console.log(\"ðŸš€ ~ tick ~ currentPiece:\", currentPiece)\n      onSwitchPiece(currentPiece === pieces.X ? pieces.O : pieces.X);\n      const currentPlayer = currentPiece === pieces.X ? 'Player 1' : 'Player 2'\n      const title = `${currentPlayer}'s turn`\n      handleDialog({open: true, title})\n    }\n  }\n\n  const resetMap = () => {\n    onInitArray(\n      Array(numberCell)\n        .fill(null)\n        .map(() => Array(numberCell).fill(null))\n    );\n    onSwitchPiece(pieces.X);\n    setCount(0)\n    setWin(-1)\n    setPiecesWin(null)\n  }\n\n\n  \n  return {\n    numberCell,\n    currentPiece,\n    arrayBoard,\n    onSetNumberCell,\n    onInitArray,\n    onTick,\n    onSwitchPiece,\n    tick, isWin, piecesWin, resetMap,\n    handleDialog,\n    dialogState,\n    player1,\n    player2,\n    handleNameChange,\n    showAnswer,\n    setShowAnswer\n  }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}